Web Infrastructure Design

What is a server?

A server is a specialized computer or 
software system designed to provide services, 
resources, or data to other computers, 
known as clients, over a network.Servers can serve various purposes,
including hosting websites, storing files, managing emails,
providing access to databases, and more.
They are typically more powerful and have more storage capacity than regular desktop computers.


What is the role of the domain name ?

A domain name serves as a user-friendly, human-readable label used to identify and 
locate resources on the internet. Instead of users having to remember 
a complex series of numbers (IP addresses) 
to access websites, email servers, or 
other online services, they can use domain names,
which are easy-to-recall words or phrases,so
domain names play a crucial role in making 
the internet more accessible and user-friendly 
by providing human-readable addresses and 
serving as the foundation for establishing online identities and services.

What type of DNS record www is in www.foobar.com?


In the domain name "www.foobar.com," the "www" is a commonly used subdomain and 
not a specific DNS record type.

A DNS record is a type of information stored in the Domain Name System (DNS) of the internet,
which includes various record types such as A (Address) records, CNAME (Canonical Name) records, 
MX (Mail Exchange) records,
and many others.
In the case of "www.foobar.com":

- "foobar.com" is the domain name.
- "www" is a subdomain of "foobar.com."

Typically, web servers are configured to respond to requests
for the "www" subdomain, directing them to the appropriate web content. 
This is a common practice, but it's important to note that there is no specific DNS record type called "www." 
The DNS records associated with the "www" subdomain would typically be either an A record (to map the subdomain to an IP address) 
or a CNAME record (to alias the subdomain to another domain or hostname).


What is the role of the web server?


The web server plays a central role in the process of delivering web content to users over the internet. 
When you access a website, your web browser sends a request to the web server hosting the site, 
and the web server responds by delivering the requested web page.


what is the role of the application server?

An application server is a software framework that 
provides an environment for running applications, 
handling business logic, and facilitating communication between various software components. 
Here are the key roles of an application server:

•Business Logic Execution

•Middleware Services

•Communication Management
State Management

•Scalability and Load Balancing

•Integration

•Caching

Role for Database

A database is a structured collection of data organized in a way that a computer program 
can quickly select and manipulate specific pieces of data. 
Databases play a crucial role in data management for applications. 
Here are their key roles:

•Data Storage

•Data Manipulation

•Data retrieval

•Data Integrity

•Data Security

•Concurrency Control

•Backup and Recovery

What is the server using to communicate with the computer of the user requesting the website?

When a user requests a website, the communication between the user's computer and 
the web server occurs over the internet using the Hypertext Transfer Protocol (HTTP) or 
its secure version, HTTPS (HTTP Secure). 
HTTP and HTTPS are application layer protocols that define the format of messages and 
how web browsers and servers should respond to various commands.


Explain what the issues are with this infrastructure: 

1. SPOF (Single Point of Failure):
   
   **Issue:** A Single Point of Failure (SPOF) means that there's a component in the system 
( such as a server, network device, or service ) that, if it fails, will cause the entire system to stop working. 
For instance, if there's only one web server handling all the traffic, and it fails, the website will be inaccessible until the server is restored.

   **Impact:** High risk of downtime and loss of service availability. If the SPOF fails, the entire system goes offline, 
disrupting user experience and potentially causing financial losses for businesses.

   **Solution:** To address SPOF, redundancy and failover mechanisms can be implemented. This might involve having multiple web servers with load balancing, 
redundant network connections, and failover systems. If one component fails, traffic can be rerouted to the redundant components, minimizing downtime.


2. **Downtime During Maintenance:**

   **Issue:** Performing maintenance tasks, such as deploying new code or updates, 
often requires restarting services or servers. During this time, the website or service might be temporarily unavailable to users.

   **Impact:** Planned downtime during maintenance windows can inconvenience users, affect user experience, and disrupt service availability.

   **Solution:** Implementing techniques like rolling deployments can help minimize downtime. In a rolling deployment, 
updates are applied to a subset of servers at a time, ensuring that the service remains operational for users even while updates are being deployed.

3. **Limited Scalability:**

   **Issue:** If the infrastructure is not designed to handle a large volume of incoming traffic, the system can become overwhelmed during traffic spikes. 
This issue is particularly common in situations where the infrastructure does not scale horizontally (adding more servers to distribute the load) or vertically (increasing resources 
like CPU, RAM, etc., on existing servers).

   **Impact:** Inability to handle high traffic loads can lead to slow website performance, errors, or complete unavailability during peak periods, 
such as during a marketing campaign or a sudden surge in user activity.

   **Solution:** Implementing load balancing and auto-scaling mechanisms can help address scalability issues. Load balancers distribute incoming traffic across multiple servers, 
and auto-scaling allows the infrastructure to automatically add or remove resources based on demand, ensuring the system can handle varying levels of traffic efficiently.

Addressing these issues requires careful planning, 
architecture design, and implementation of best practices to create a robust, 
scalable, and highly available infrastructure.


